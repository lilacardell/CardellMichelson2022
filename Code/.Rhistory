full_join(missing_mm,by="country")
t[is.na(t)]=""
print=xtable(t,type="latex")
names(print)<-c("Country","Both prices exist","No harvest Price","No lean price","Total bservations","Mean return")
print(print,file=paste0("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/missingstats2_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
missing_m1$meanreturn=missing_m1$meanreturn*100
ggplot()+
geom_bar(data=missing1,aes(x=country,stat="identity",fill=status))+
scale_fill_manual(values=c("gray","pink","purple"),breaks=c("both prices exist","no harvest price","no lean price"),labels=c("both prices exist","no harvest price","no lean price"),name="* average returns (%)")+
geom_point(data=missing_m1,aes(x=country,y=meanreturn*10),size=3,shape=8)+
scale_y_continuous(name="Count of crop years",sec.axis=sec_axis(trans~./10,name=""),expand=c(0,0),limits=c(0,1400))+
theme(axis.text.x = element_text(angle = 45, hjust = 1),panel.background = element_blank(),
axis.line = element_line(colour = "black"),panel.grid.major.y = element_line(colour = "black"),panel.grid.minor.y = element_line(colour = "black"))
ggsave("missingness.PNG",width=12,height=9)
rm(list=ls(pattern="missing"),t,print,marketstats)
mlist=unlist(season_mkt%>%filter(market_type=="Retail"&n.yrs1>0)%>%distinct(country,region,commodity,market_type,market)%>%unite("z",1:5,sep="_"))
#506 retail markets
skew_mkt=maize%>%
unite("z",country,region,commodity,market_type,market,sep="_")%>%
filter(z%in%mlist)%>%
separate(z,c("country","region","commodity","market_type","market"),sep="_")%>%
group_by(country,commodity,market,market_type)%>%
dplyr::summarise(nobs=n(),cv=(mean(price_real)/sd(price_real)),
skew=skewness(price_real),kurt=kurtosis(price_real))%>%
mutate(n_skew=if_else(skew<=0,1,0),n_kurt=if_else(kurt<=0,1,0))
#no evidence of negative kurtosis in any markets
skew_country=skew_mkt%>%
group_by(country,commodity,market_type)%>%
dplyr::summarise(across(c(cv,kurt,skew),mean,na.rm=TRUE),across(starts_with("n"),sum,na.rm=TRUE),n_mkt=n())%>%
dplyr::mutate(n_skew_pct=n_skew/n_mkt,n_kurt_pct=n_kurt/n_mkt)%>%
dplyr::mutate(across(c(n_skew_pct,n_kurt_pct),~paste0(sprintf("%.1f",.*100),"%")),
across(c(cv,skew,kurt),round,3))%>%
ungroup()%>%
dplyr::select(country,n_mkt,skew,n_skew_pct)%>%
mutate(country=revalue(country,c("Democratic Republic of the Congo"="DR Congo")))
#KPSS test for stationarity
extreme1_mkt=season%>%
unite("z",country,region,commodity,market_type,market,sep="_")%>%
filter(z%in%mlist)%>%
separate(z,c("country","region","commodity","market_type","market"),sep="_")%>%
#filter(market_type=="Retail"&is.finite(returns1))%>%
unite("c_mkt",c("country","market"))%>%
group_by(c_mkt)%>%
arrange(c_mkt,cropyear)%>%
dplyr::summarise(pval=ifelse(n()<=3,as.numeric(NA),kpss.test(ts(returns1))$p.value))
nrow(subset(extreme1_mkt,pval<0.05))
#15 markets
print=xtable(skew_country,type="latex")
names(print)<-c("Country","Markets","Average Market Skewness ","Percent Markets Negative Skew")
print(print,file=paste0("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/skew_kurt_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
rm(skew_mkt,skew_country,print)
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output")
#summary datasets for main season
sum_retail1=season_country%>%
filter(market_type=="Retail"&n.yrs1>0)%>%
dplyr::select(country,years,contains("1"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt1,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1)
sum_wholesale1=season_country%>%
filter(market_type=="Wholesale"&n.yrs1>0)%>%
dplyr::select(country,years,contains("1"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt1,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1)
#main season (retail)
retail1=season_country%>%
filter(market_type=="Retail"&n.yrs1>0)%>%
dplyr::select(country,years,n.mkt1,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1)%>%
rbind(sum_retail1)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")),
country=revalue(country,c("Democratic Republic of the Congo"="DR Congo")))
#main season (wholesale)
wholesale1=season_country%>%
filter(market_type=="Wholesale"&n.yrs1>0)%>%
dplyr::select(country,years,n.mkt1,n.yrs1,pct_season1,e.returns1,pos.returns1,neg.returns1)%>%
rbind(sum_wholesale1)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")))
#summary datasets for second season
sum_retail2=season_country%>%
filter(market_type=="Retail"&n.yrs2>0)%>%
dplyr::select(country,years,contains("2"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt2,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2)
sum_wholesale2=season_country%>%
filter(market_type=="Wholesale"&n.yrs2>0)%>%
dplyr::select(country,years,contains("2"))%>%
dplyr::summarise(across(starts_with("n."),sum),across(starts_with("pct_"),mean,na.rm=TRUE),across(contains("returns"),mean,na.rm=TRUE))%>%
mutate(country="Total",commodity=" ",years=" ")%>%
dplyr::select(country,years,n.mkt2,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2)
#second season (retail)
retail2=season_country%>%
filter(market_type=="Retail"&n.yrs2>0)%>%
dplyr::select(country,years,n.mkt2,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2)%>%
rbind(sum_retail2)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")))
#second season (wholesale)
wholesale2=season_country%>%
filter(market_type=="Wholesale"&n.yrs2>0)%>%
dplyr::select(country,years,n.mkt2,n.yrs2,pct_season2,e.returns2,pos.returns2,neg.returns2)%>%
rbind(sum_wholesale2)%>%
dplyr::mutate(across(contains("pct"),~paste0(sprintf("%.1f",.*100),"%")),across(contains("returns"),~paste0(sprintf("%.1f",.*100),"%")))
header<-c("Country","Years","Markets","Market-Years",
"Frequency of Negative Returns","Average Total Returns","Average Positive Returns","Average Negative Returns")
print=xtable(retail1,type="latex")
names(print)<-header
print(print,file=paste0("./retailprices_main_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(retail2,type="latex")
names(print)<-header
print(print,file=paste0("./retailprices_second_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
print=xtable(wholesale1,type="latex")
names(print)<-header
print(print,file=paste0("./wholesaleprices_main_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
###ltd for presentations
#main season (retail)
retail1_ltd=retail1%>%
dplyr::select(country,e.returns1,pct_season1,neg.returns1)
print=xtable(retail1_ltd,type="latex")
names(print)<-c("Country","Average Total Returns","Frequency of Negative Returns","Average Negative Returns")
print(print,file=paste0("./retailprices_ltd_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
rm(list=ls(pattern="sum_"),retail1,retail2,wholesale1,wholesale2,print,header)
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/")
cb1=season_mkt%>%
filter(market_type=="Retail"&is.finite(e.returns1))
cb1plot=ggplot()+
geom_point(data=cb1,aes(x=pct_season1*100,y=e.returns1*100,size=n.yrs1))+ scale_y_continuous(name="Average returns to storage (%)",limits=c(-50,200),breaks=seq(-50,200,50),expand=c(0,0)) +  scale_x_continuous(name="% of seasons with negative returns",limits=c(0,100),breaks=seq(0,100,20)) +
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),panel.grid.major = element_line(color="lightgray"),legend.position = c(1, 1),legend.justification = c(1, 1),
axis.line = element_line(color="black"))+guides(size = guide_legend(reverse = TRUE))+
geom_hline(yintercept=0,color="darkgray")+ scale_size(range = c(0.5,3),breaks=c(5,10,15,20),name="Number of \n market-years")
print(cb1plot)
ggsave("seasondotplot.png")
neg_all=cb1%>%filter(pct_season1==1) #0
pos_all=cb1%>%filter(pct_season1==0) #99
#neg_country=unique(neg_all$country) #1 country
pos_country=unique(pos_all$country) #11 different countries
#neg_market=unique(neg_all$market) #1 market
pos_market=unique(pos_all$market) #99 different markets
#neg_all=season%>%filter(market%in%neg_market)#5 total observations for that 1 markets
pos_all=season%>%filter(market%in%pos_market)#839 total observations for those 72 markets
#neg_year=unique(neg_all$cropyear) #5 different years
pos_year=unique(pos_all$cropyear) #21 different years
rm(cb1,cb1plot,list=ls(pattern="neg_"))
rm(list=ls(pattern="pos_"))
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/")
dot= ggplot()+geom_jitter(data=subset(season,market_type=="Retail"),aes(x=factor(cropyear),y=returns1*100,color=yield_kgha),size=1.0,alpha=0.75)+ #geom_hline(yintercept=0,color="red",position="identity")+
scale_color_gradient2(low="gray80",high="gray10",na.value="gray",name="Yield (kg/ha)",limits=c(0,5000))+
#scale_color_gradient2(low="chartreuse",high="darkgreen",na.value="gray",name="Yield (kg/ha)",limits=c(0,4000))+
scale_y_continuous(name="Returns to storage (%)",limits=c(-100,500),breaks=seq(-100,500,100),expand=c(0,0))+
scale_x_discrete(name="Year",breaks=c("2000","2004","2008","2012","2016","2020"),labels=c("2000","2004","2008","2012","2016","2020"))+
geom_hline(yintercept=0,color="red",position="identity")+
theme(panel.grid.major = element_line(color="lightgray"),panel.grid.minor = element_blank(), panel.background = element_blank(),axis.line = element_line(color="black"),legend.position = c(1, 1),legend.justification = c(1, 1))
#geom_jitter(data=subset(time,dpct<=0),aes(x=year, y=dpct,color="red",size=yield_kgha),alpha=0.5)+
#geom_jitter(data=subset(time,dpct>0),aes(x=year,y=dpct,color="black",size=yield_kgha),alpha=0.5)+
#scale_color_manual(values=c("black","red")) +
#scale_y_continuous(name="Seasonal Returns (%)",limits=c(-100,500),breaks=seq(-100,500,100))+
# geom_text(data=time,aes(x=2010,y=450,label="High Planting Price, Low Harvest Price",color="black"),size=4)+
# geom_text(data=time,aes(x=2010,y=-95,label="High Harvest Price, Low Planting Price",color="red"),size=4)
print(dot)
ggsave("cropyear_returns_dot.PNG")
box= ggplot()+geom_boxplot(data=subset(season,market_type=="Retail"),aes(x=factor(cropyear),y=returns1*100),outlier.shape=1,position="dodge") + geom_hline(yintercept=0,color="red",position="identity")+
scale_y_continuous(name="Returns to storage (%)", limits=c(-100,500),breaks=seq(-100,500,100))+ scale_x_discrete(name="Year",breaks=c("2000","2004","2008","2012","2016","2020"))+
theme(panel.grid.major = element_blank(),legend.position="none",panel.grid.minor = element_blank(), panel.background = element_blank(),axis.line = element_line(color="black"))
print(box)
ggsave("cropyear_returns_box.PNG")
rm(dot,box)
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/")
extreme1=season%>%
filter(market_type=="Retail"&is.finite(returns1))%>%
group_by(country)%>%
dplyr::mutate(z_h1=scale(hmin1),h1_d=as.factor(paste0("d",ntile(hmin1,10))))%>%
ungroup()
extremedot=ggplot()+
geom_point(data=extreme1,aes(x=z_h1,y=returns1*100,shape=factor(noarb1)),alpha=0.5,size=1)+
scale_y_continuous(name="Returns to storage for primary maize season (%)",limits=c(-100,500),breaks=seq(-100,500,100),expand=c(0,0)) +
scale_x_continuous(name="Z-score of harvest price for primary maize season",limits=c(-3,6),breaks=seq(-3,6,1),expand=c(0,0))+
scale_shape_manual(values=c(3,1),breaks=c("0","1"),labels=c("Positive Returns","Negative Returns"),name="Returns to Storage")+
geom_hline(yintercept=0,color="red")+
theme(panel.grid.minor = element_blank(),axis.line = element_line(color="black"),
legend.position = c(0.9, 0.9),legend.justification = c(1, 1))
print(extremedot)
ggsave("harvestprices_returns.png")
rm(decile,extremedot)
split.df=split(extreme1,extreme1$country)
country.name=names(split.df)
#run with and without cropyear FE as robustness check
table=data.frame(country=as.character())
table_fe=data.frame(country=as.character())
for (i in 1:length(country.name)){
df=split.df[[i]]
cname=country.name[[i]]
#without FE
#OLS
o=lm(returns1*100~z_h1,data=df) #without FE
s=summary(o)
coef_o=s$coefficients[1,1]
pval_o=s$coefficients[1,4]
rsq_o=s$r.squared
#probit
p=glm(factor(noarb1)~z_h1,data=df,family=binomial(link = "probit"))
pm=probitmfx(factor(noarb1)~z_h1,data=df,atmean=FALSE,robust=TRUE)
rsq_p=as.numeric(PseudoR2(p,which="McFadden"))
coef_p=pm$mfxest[1,1]
pval_p=pm$mfxest[1,4]
cprep=data.frame(cname,coef_o,pval_o,rsq_o,coef_p,pval_p,rsq_p)
table=rbind(table,cprep)
#with FE
#OLS
o=lm(returns1*100~z_h1+factor(cropyear),data=df) #with FE
s=summary(o)
coef_o=s$coefficients[1,1]
pval_o=s$coefficients[1,4]
rsq_o=s$r.squared
#probit
p=glm(factor(noarb1)~z_h1+factor(cropyear),data=df,family=binomial(link = "probit"))
pm=probitmfx(factor(noarb1)~z_h1+factor(cropyear),data=df,atmean=FALSE,robust=TRUE)
rsq_p=as.numeric(PseudoR2(p,which="McFadden"))
coef_p=pm$mfxest[1,1]
pval_p=pm$mfxest[1,4]
cprep_fe=data.frame(cname,coef_o,pval_o,rsq_o,coef_p,pval_p,rsq_p)
table_fe=rbind(table_fe,cprep_fe)
}
###pooled regressions w.out cropyear FE
o_pool=lm(returns1*100~z_h1+factor(country),data=extreme1)
s_pool=summary(o_pool)
rsq_o_pool=s_pool$r.squared
p_pool=glm(factor(noarb1)~z_h1+factor(country),data=extreme1,family=binomial(link = "probit"))
rsq_p_pool=PseudoR2(p_pool,which="McFadden")
table=table%>%
add_row(cname="CC Average",rsq_o=mean(table$rsq_o),rsq_p=mean(table$rsq_p))%>%
add_row(cname="Pooled",rsq_o=rsq_o_pool,rsq_p=rsq_p_pool)%>%
mutate(stars_o=ifelse(pval_o < .01, "***", ifelse(pval_o < .05, "** ", ifelse(pval_o < .1, "* ", " "))),
stars_p=ifelse(pval_p < .01, "***", ifelse(pval_p < .05, "** ", ifelse(pval_p < .1, "* ", " "))))%>%
dplyr::mutate(cp_o=paste(round(coef_o,3),stars_o,sep=""),cp_p=paste(round(coef_p,3),stars_p,sep=""),
across(starts_with("rsq"),round,2))%>%
dplyr::select(cname,cp_o,rsq_o,cp_p,rsq_p)
###pooled regressions w/cropyear FE
o_pool=lm(returns1*100~z_h1+factor(cropyear)+factor(country),data=extreme1)
s_pool=summary(o_pool)
rsq_o_pool=s_pool$r.squared
p_pool=glm(factor(noarb1)~z_h1+factor(cropyear)+factor(country),data=extreme1,family=binomial(link = "probit"))
rsq_p_pool=PseudoR2(p_pool,which="McFadden")
table_fe=table_fe%>%
add_row(cname="CC Average",rsq_o=mean(table_fe$rsq_o),rsq_p=mean(table_fe$rsq_p))%>%
add_row(cname="Pooled",rsq_o=rsq_o_pool,rsq_p=rsq_p_pool)%>%
mutate(stars_o=ifelse(pval_o < .01, "***", ifelse(pval_o < .05, "** ", ifelse(pval_o < .1, "* ", " "))),
stars_p=ifelse(pval_p < .01, "***", ifelse(pval_p < .05, "** ", ifelse(pval_p < .1, "* ", " "))))%>%
dplyr::mutate(cp_o=paste(round(coef_o,3),stars_o,sep=""),cp_p=paste(round(coef_p,3),stars_p,sep=""),
across(starts_with("rsq"),round,2))%>%
dplyr::select(cname,cp_o,rsq_o,cp_p,rsq_p)
t=xtable(table,type="latex",auto=TRUE)
names(t)<-c("Country","Harvest price z-score (OLS)","R squared","Harvest price z-score (probit)","Pseudo-R squared")
print(t,file=paste0("c:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/OLSprobitreturns_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
t_fe=xtable(table_fe,type="latex",auto=TRUE)
names(t_fe)<-c("Country","Harvest price z-score (OLS)","R squared","Harvest price z-score (probit)","Pseudo-R squared")
print(t_fe,file=paste0("c:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/OLSprobitreturns_FE",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
rm(cmat,cprep,cprep_fe,df,m,prep,results,table,table_fe,split.df,c,cstars,n,names,o,table,t,t_fe,r,v,p,i,coef,cname,pm,s,list=ls(pattern="pool"))
rm(list=ls(pattern="_o"))
rm(list=ls(pattern="_p"))
#distribution of number of years for primary maize season
n_yrs=season%>%
filter(market_type=="Retail"& is.finite(returns1))%>%
group_by(country,market)%>%
dplyr::summarise(n_yrs=n())
#506 retail markets
summary(n_yrs$n_yrs)
#range: 5-21, median 9, IQR 6-13
#create data frame with prices and returns for primary maize retail season, then calculate mean and variance for prices and returns and the minimum risk coefficient to avoid storage for that harvest price
ex_price=season%>%
filter(market_type=="Retail"& !is.na(returns1))%>%
mutate(return=returns1,pl=lmax1,ph=hmin1)%>%
group_by(country,region,market)%>%
arrange(country,region,market)%>%
dplyr::mutate(across(c(ph,pl,return),list(e=mean,v=var),na.rm=TRUE,.names = "{.fn}.{.col}"))%>%
ungroup()%>%
dplyr::select(1:6,pl,e.pl,ph,v.pl,return,e.return,v.return)%>%
mutate(minr.nostore=2*e.return/v.return)
# mutate(minr.nostore=2*(e.pl/v.pl)*(e.pl-ph))
ex_price_c=ex_price%>%
group_by(country)%>%
dplyr::summarise(n_mkt=length(unique(market)))
#create sequence of risk aversion coefficients between 0 and 5
sim_rr=seq(0,5,by=0.1)
#create certainty equivalent based on risk aversion coefficients and evaluate storage choice by comparing CE to harvest price and group by risk aversion tolerance with and without credit access (5% interest), also calculate the minimum risk coefficient to opt out of storage
sim=expand_grid(ex_price,sim_rr)%>%
mutate(ce=e.pl-((sim_rr*v.pl)/(2*e.pl)),
cr=e.return-((sim_rr*v.return)/2))%>%
mutate(nostore.0=if_else(ph>ce,1,0),
nostore.r0=if_else(cr<=0,1,0),nostore.r5=if_else(cr-.05<=0,1,0))%>%
dplyr::mutate(bin=cut(sim_rr,breaks=c(0,1,3,5),right=FALSE,labels=c("Risk Neutral R=[0,1)", "Risk Averse R=[1,3)","High Risk Aversion R=[3,5)")))
#calculate market averages for storage avoidance by risk coefficient
sim_mkt=sim%>%
group_by(country,region,market,sim_rr)%>%
dplyr::summarise(across(contains("nostore."),mean,na.rm=TRUE,.names = "{.col}_mkt"))%>%
ungroup()
#calculate market averages for minimum risk coefficient to avoid storage
minr_mkt=ex_price%>%
group_by(country,region,market)%>%
dplyr::summarise(across(contains("minr."),mean,na.rm=TRUE,.names = "{.col}_mkt"))%>%
ungroup()
#calculate country averages over market averages for storage avoidance by risk coefficients and aggregate by risk tolerance group
sim_country=sim_mkt%>%
group_by(country,sim_rr)%>%
dplyr::summarise(across(contains("nostore."),mean,na.rm=TRUE,.names = "{.col}_c"))%>%
ungroup()%>%
mutate(bin=cut(sim_rr,breaks=c(0,1,3,5),right=FALSE,labels=c("Risk Neutral R=[0,1)", "Risk Averse R=[1,3)","High Risk Aversion R=[3,5)")))%>%
filter(!is.na(bin))%>%
group_by(country,bin)%>%
dplyr::summarise(across(contains("nostore."),mean,na.rm=TRUE))%>%
ungroup()%>%
pivot_wider(names_from =bin,values_from=c("nostore.0_mkt_c","nostore.r0_mkt_c","nostore.r5_mkt_c"))
#and for min risk coefficient
minr_country=minr_mkt%>%
group_by(country)%>%
dplyr::summarise(across(contains("minr."),mean,na.rm=TRUE,.names = "{.col}_c"))%>%
ungroup()
#calculate total rows and add to dataframes
sim_tot=sim_country%>%
dplyr::summarise(across(where(is.numeric),mean,na.rm=TRUE))%>%
mutate(country="Total")%>%
dplyr::select(country,everything())
sim_country=rbind(sim_country,sim_tot)%>%
dplyr::mutate(across(starts_with("nostore"),~paste0(sprintf("%.1f",.*100),"%")))%>%
left_join(ex_price_c,by=c("country"))
minr_tot=minr_country%>%
dplyr::summarise(across(where(is.numeric),mean,na.rm=TRUE))%>%
mutate(country="Total")%>%
dplyr::select(country,everything())
minr_country=rbind(minr_country,minr_tot)%>%
dplyr::mutate(across(where(is.numeric),round,2))
#separate the data frames by analysis
#storage uptake percent by risk tolerance group (lean season prices no credit/interest rate)
nostore_0=sim_country%>%
dplyr::select(country,n_mkt,starts_with("nostore.0"))
#storage uptake percent by risk tolerance group (returns to storage no credit/interest rate)
nostore_r0=sim_country%>%
dplyr::select(country,n_mkt,starts_with("nostore.r0"))
#storage uptake percent by risk tolerance group (returns to storage 5% interest rate)
nostore_r5=sim_country%>%
dplyr::select(country,n_mkt,starts_with("nostore.r5"))
minr_nostore=minr_country%>%
dplyr::select(country,starts_with("minr."))
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output")
sim_table_grp=xtable(nostore_0,auto=TRUE,type="latex")
print(sim_table_grp,file=paste0("./nostore_riskgrp_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
sim_table_grp=xtable(nostore_r0,auto=TRUE,type="latex")
print(sim_table_grp,file=paste0("./nostore_riskgrp_r",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
sim_table_grp=xtable(nostore_r5,auto=TRUE,type="latex")
print(sim_table_grp,file=paste0("./nostore_i_riskgrp_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
sim_table_grp=xtable(minr_nostore,auto=TRUE,type="latex")
print(sim_table_grp,file=paste0("./nostore_minr_riskgrp_",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
rm(e_price,nostore_0,nostore_5,list=ls(pattern="sim"),ex_price_c)
rm(list=ls(pattern="minr"))
#filter season
presplit=season%>%
filter(market_type=="Retail"& !is.na(returns1))
split.df=split(presplit,paste(presplit$country,presplit$region,presplit$market))
cm.name=names(split.df)
#results<-list()
table3=data.frame(country_mkt=as.character(),coef=as.numeric())
for (i in 1:length(cm.name)){
df=split.df[[i]]
cname=cm.name[[i]]
m=lm(returns1~hmin1,data=df)#predict returns
p_df=df%>%
dplyr::select(country,region,market,cropyear,hmin1,returns1)
p_df$p_returns=predict(m,newdata=p_df)
table3=rbind(table3,p_df)
}
######Returns by country (dotplot) vs prediction
#returns to main season
ex_price=table3%>%
arrange(country,region,market)%>%
group_by(country,region,market)%>%
dplyr::mutate_at("p_returns",funs(e.preturn=mean,v.preturn=var))%>%
ungroup()
ex_price_c=ex_price%>%
group_by(country)%>%
dplyr::summarise(n_mkt=length(unique(market)))
#create sequence of risk aversion coefficients
sim_rr=seq(0,5,by=0.1)
#create certainty equivalent by risk aversion coefficient and evaluate storage choice
sim=expand_grid(ex_price,sim_rr)%>%
mutate(cr=e.preturn-((sim_rr*v.preturn)/2))%>%
mutate(nostore.r0=if_else(cr<=0,1,0),)%>%
dplyr::mutate(bin=cut(sim_rr,breaks=c(0,1,3,5),right=FALSE,labels=c("Risk Neutral R=[0,1)", "Risk Averse R=[1,3)","High Risk Aversion R=[3,5)")))
#calculate market averages for storage avoidance by risk coefficient
sim_mkt=sim%>%
group_by(country,region,market,sim_rr)%>%
dplyr::summarise(across(contains("nostore."),mean,na.rm=TRUE,.names = "{.col}_mkt"))%>%
ungroup()
#calculate country averages over market averages for storage avoidance by risk coefficients and aggregate by risk tolerance group
sim_country=sim_mkt%>%
group_by(country,sim_rr)%>%
dplyr::summarise(across(contains("nostore"),mean,na.rm=TRUE,.names = "{.col}_c"))%>%
ungroup()%>%
mutate(bin=cut(sim_rr,breaks=c(0,1,3,5),right=FALSE,labels=c("Risk Neutral R=[0,1)", "Risk Averse R=[1,3)","High Risk Aversion R=[3,5)")))%>%
filter(!is.na(bin))%>%
group_by(country,bin)%>%
dplyr::summarise(across(contains("nostore"),mean,na.rm=TRUE))%>%
ungroup()%>%
pivot_wider(names_from =bin,values_from=c("nostore.r0_mkt_c"))
#calculate total rows and add to dataframes
sim_tot=sim_country%>%
dplyr::summarise(across(where(is.numeric),mean,na.rm=TRUE))%>%
mutate(country="Total")%>%
dplyr::select(country,everything())
sim_country=rbind(sim_country,sim_tot)%>%
dplyr::mutate(across(where(is.numeric),~paste0(sprintf("%.1f",.*100),"%")))%>%
left_join(ex_price_c,by=c("country"))
#separate the data frames by analysis
#storage uptake percent by risk tolerance group (no credit/interest rate)
nostore_r0=sim_country%>%
dplyr::select(country,n_mkt,everything())
table_grp=xtable(nostore_r0,auto=TRUE,type="latex")
print(table_grp,file=paste0("c:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output/nostore_pred",format(Sys.Date(),"%d_%m_%y"),".tex"),include.rownames=FALSE)
rm(ex_price,m,p_df,p_risk1,table_grp,table3,i,rr,cname,country.name,split.df,nostore_0,df)
rm(list=ls(pattern="sim"))
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output")
#want to use same set of markets as in season_mkt, but only the retail markets (506)
mlist=unlist(season_mkt%>%filter(market_type=="Retail"&n.yrs1>0)%>%distinct(country,region,commodity,market_type,market)%>%unite("z",1:5,sep="_"))
## Duration (FULL SET) data set for primary maize season
duration1=returns_dur1%>%
unite("z",country,region,commodity,market_type,market,sep="_")%>%
filter(z%in%mlist)%>%
separate(z,c("country","region","commodity","market_type","market"),sep="_")%>%
filter(market_type=="Retail"&is.finite(returns1))
#Duration (MARKET LEVEL)
duration1_mkt=duration1%>%
group_by(country,region,commodity,market_type,market,duration1)%>%
dplyr::summarise(returns_m=mean(returns1),
n_season=n(),n_neg=sum(noarb1))%>%
ungroup()%>%
mutate(pct_season=n_neg/n_season)%>%
dplyr::select(-n_neg)
######Returns to duration by country (dotplot)
f_grid_dur_dot=ggplot()+geom_jitter(data=duration1,aes(x=factor(duration1),y=returns1*100,color=factor(noarb1)),size=1)+scale_y_continuous(name="Returns to storage (%)", limits=c(-100,500),breaks=seq(-100,500,100))+xlab("Number of Months Post-Harvest")+
scale_color_manual(name="Returns",breaks=c("0","1"),values=c("red","black"),labels=c("Negative Returns","Positive Returns"))+
facet_wrap(.~country,ncol=4,scale="free_x")+labs(title="Intratemporal returns to storage")+
theme(legend.position = c(0.9, 0),legend.justification = c(1, 0),plot.title = element_text(hjust = 0.5,face="bold"))
#print(f_grid_dur_dot)
ggsave("dur_returns_facet_dot.PNG",width=12,height=9)
######Returns to duration by country (boxplot)
f_grid_dur_box=ggplot()+geom_boxplot(data=duration1,aes(x=factor(duration1),y=returns1*100),outlier.shape=1,position="dodge")+scale_y_continuous(name="Returns to storage (%)", limits=c(-100,500),breaks=seq(-100,500,100))+xlab("Number of Months Post-Harvest")+geom_hline(yintercept=0,color="red",position="identity")+
facet_wrap(.~country,ncol=4,scale="free_x")+
#labs(title="Intratemporal returns to storage (primary maize season)")+
theme(legend.position = c(0.9, 0),legend.justification = c(1, 0),plot.title = element_text(hjust = 0.5,face="bold"),plot.margin=margin(-0.5,-0.5,-0.5,-0.5,"pt"), panel.margin = unit(0.5,"cm"))
#print(f_grid_dur_box)
ggsave("dur_returns_facet_box.PNG",width=12,height=9)
rm(f_grid_dur_dot,f_grid_dur_box)
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output")
#create data frame with prices and returns for primary maize retail season, then calculate mean and variance for prices and returns and the minimum risk coefficient to avoid storage for that harvest price
ex_priced=duration1%>%
mutate(return=returns1,pl=price_real,ph=hend1)%>%
group_by(country,region,market,duration1)%>%
arrange(country,region,market,duration1)%>%
dplyr::mutate(across(c(ph,pl,return),list(e=mean,v=var),na.rm=TRUE,.names = "{.fn}.{.col}"))%>%
ungroup()%>%
dplyr::select(1:6,duration1,pl,e.pl,ph,v.pl,return,e.return,v.return)
ex_price_cd=ex_priced%>%
group_by(country,duration1)%>%
dplyr::summarise(n_mkt=length(unique(market)))
#create sequence of risk aversion coefficients between 0 and 5
sim_rr=seq(0,5,by=0.1)
#create certainty equivalent based on risk aversion coefficients and evaluate storage choice by comparing CE to harvest price and group by risk aversion tolerance with and without credit access (5% interest), also calculate the minimum risk coefficient to opt out of storage
sim=expand_grid(ex_priced,sim_rr)%>%
mutate(cr=e.return-((sim_rr*v.return)/2))%>%
mutate(nostore.r0=if_else(cr<=0,1,0))%>%
dplyr::mutate(bin=cut(sim_rr,breaks=c(0,1,3,5),right=FALSE,labels=c("Risk Neutral R=[0,1)", "Risk Averse R=[1,3)","High Risk Aversion R=[3,5)")))
#calculate market averages for storage avoidance by risk coefficient
sim_mkt=sim%>%
group_by(country,region,market,duration1,sim_rr)%>%
dplyr::summarise(across(contains("nostore."),mean,na.rm=TRUE,.names = "{.col}_mkt"))%>%
ungroup()
#calculate country averages over market averages for storage avoidance by risk coefficients and aggregate by risk tolerance group
sim_country=sim_mkt%>%
group_by(country,duration1,sim_rr)%>%
dplyr::summarise(across(contains("nostore."),mean,na.rm=TRUE,.names = "{.col}_c"))%>%
ungroup()%>%
mutate(bin=cut(sim_rr,breaks=c(0,1,3,5),right=FALSE,labels=c("Risk Neutral R=[0,1)", "Risk Averse R=[1,3)","High Risk Aversion R=[3,5)")))%>%
filter(!is.na(bin))%>%
group_by(country,duration1,bin)%>%
dplyr::summarise(across(contains("nostore."),mean,na.rm=TRUE))%>%
ungroup()
duration_risk=ggplot()+
geom_path(data=sim_country,aes(x=factor(duration1),y=nostore.r0_mkt_c*100,color=bin,group=bin),size=1)+
scale_colour_manual(values = c("green", "gray", "red"),name="Relative Risk Aversion")+
scale_x_discrete(name="Number of Months Post-Harvest")+
scale_y_continuous(name="Share of markets farmers should forgo storage",limits=c(0,100))+
facet_wrap(.~country,ncol=4,scale="free_x")+labs(title="Share of markets farmers should forgo storage over all months post-harvest")+
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),panel.grid.major = element_blank(),
axis.line = element_line(color="black"),
legend.position = c(0.9, 0),legend.justification = c(1, 0),
plot.title = element_text(hjust = 0.5,face="bold"),
plot.margin=margin(-0.5,-0.5,-0.5,-0.5,"pt"), panel.margin = unit(0.5,"cm"),
text= element_text(family="serif"))
ggsave("duration_risk.PNG",width=12,height=9)
setwd("C:/Users/lilac2/Box/GIEWS_Project/GIEWS/Final/Output")
duration_risk=ggplot()+
geom_path(data=sim_country,aes(x=factor(duration1),y=nostore.r0_mkt_c*100,color=bin,group=bin),size=1)+
scale_colour_manual(values = c("green", "gray", "red"),name="Relative Risk Aversion")+
scale_x_discrete(name="Number of Months Post-Harvest")+
scale_y_continuous(name="Share of markets farmers should forgo storage",limits=c(0,100))+
facet_wrap(.~country,ncol=4,scale="free_x")+
#labs(title="Share of markets farmers should forgo storage over all months post-harvest")+
theme(panel.grid.minor = element_blank(),panel.background = element_blank(),panel.grid.major = element_blank(),
axis.line = element_line(color="black"),
legend.position = c(0.9, 0),legend.justification = c(1, 0),
plot.title = element_text(hjust = 0.5,face="bold"),
plot.margin=margin(-0.5,-0.5,-0.5,-0.5,"pt"), panel.margin = unit(0.5,"cm"),
text= element_text(family="serif"))
ggsave("duration_risk.PNG",width=12,height=9)
